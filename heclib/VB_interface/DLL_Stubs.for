    
        SUBROUTINE TEST_1 (i)
        IMPLICIT NONE
        !DEC$ ATTRIBUTES DLLEXPORT, STDCALL :: TEST_1
        !DEC$ ATTRIBUTES ALIAS:'TEST_1' :: TEST_1
        integer  i

         write(*,*) 'inside FORTRAN i=',i
        RETURN
      END 
      
        SUBROUTINE TEST_2 (filename)
        IMPLICIT NONE
        !DEC$ ATTRIBUTES DLLEXPORT, STDCALL :: TEST_2
        !DEC$ ATTRIBUTES ALIAS:'TEST_2' :: TEST_2
        character(10) ,intent(in):: filename 
        integer  STRLEN
       !DEC$ ATTRIBUTES REFERENCE :: filename 
        write(*,*) 'len(filename)=',len(filename)
        STRLEN = INDEX(filename, CHAR(0)) - 1
        write(*,*) 'strlen = ',strlen
         write(*,*) 'inside FORTRAN filename=[',filename,']'
         call CHRLNB (filename,STRLEN)
         write(*,*)' strlen = ',strlen
        RETURN
        END 
      
      
      
      INTEGER FUNCTION FORTRANCLOSE_ (IUNIT)
!DEC$ATTRIBUTES DLLEXPORT :: FORTRANCLOSE_
!DEC$ ATTRIBUTES ALIAS : "FORTRANCLOSE_" :: FORTRANCLOSE_
C
C     Interface routine for C/C++ functions to close a file
C     open under FORTRAN
      INTEGER IUNIT,ISTAT
      CLOSE (UNIT=IUNIT, IOSTAT=ISTAT)
      FORTRANCLOSE_ = ISTAT
      RETURN
      END


      INTEGER FUNCTION FORTRANOPEN_ (CNAME, IUNIT)
!DEC$ATTRIBUTES DLLEXPORT :: FORTRANOPEN_
!DEC$ ATTRIBUTES ALIAS : "FORTRANOPEN_" :: FORTRANOPEN_
C
C     Interface routine for C/C++ functions to open a file under FORTRAN
	CHARACTER*(*) CNAME      
      INTEGER		  IUNIT, ISTAT   
	OPEN (UNIT=IUNIT, FILE=CNAME, IOSTAT=ISTAT)      
      FORTRANOPEN_ = ISTAT
      RETURN
      END


      SUBROUTINE ZCAT_ (IFLTAB, ICUNIT, ICDUNT, INUNIT,
     *   CINSTR, LABREV, LDOSRT, LCDCAT, NORECS)
!DEC$ATTRIBUTES DLLEXPORT :: ZCAT_
!DEC$ ATTRIBUTES ALIAS : "ZCAT_" :: ZCAT_
	INTEGER   IFLTAB, ICUNIT, ICDUNT, INUNIT, NORECS
      LOGICAL   LABREV, LDOSRT, LCDCAT
	CHARACTER*(*) CINSTR
C
C     Initialize return logicals to zero, because of MS Fortran
C     interface problem (only 1 byte is set)
      LCDCAT = 0
      CALL ZCAT (IFLTAB, ICUNIT, ICDUNT, INUNIT,
     *           CINSTR, LABREV, LDOSRT, LCDCAT, NORECS)
      RETURN
      END


	SUBROUTINE ZCLOSE_ (IFLTAB)
!DEC$ATTRIBUTES DLLEXPORT :: ZCLOSE_
!DEC$ ATTRIBUTES ALIAS : "ZCLOSE_" :: ZCLOSE_
      INTEGER   IFLTAB 
C
C		Close the DSS File
      CALL ZCLOSE (IFLTAB)
C
C		Close the DSS Message File
	CLOSE (UNIT=10)
      RETURN
      END


      SUBROUTINE ZDTYPE_ (IFLTAB, CPATH, NSIZE, LEXIST, CDTYPE, IDTYPE)
!DEC$ATTRIBUTES DLLEXPORT :: ZDTYPE_
!DEC$ ATTRIBUTES ALIAS : "ZDTYPE_" :: ZDTYPE_
      INTEGER   IFLTAB, NSIZE, IDTYPE
      CHARACTER*(*) CPATH, CDTYPE
	LOGICAL   LEXIST
C
C     Initialize return logicals to zero, because of MS Fortran
C     interface problem (only 1 byte is set)
      LEXIST = 0
      CALL ZDTYPE ( IFLTAB, CPATH, NSIZE, LEXIST, CDTYPE, IDTYPE)
      RETURN
      END


      SUBROUTINE ZOPEN_ (IFLTAB, CNAME, ISTAT)
!DEC$ ATTRIBUTES DLLEXPORT :: ZOPEN_
!DEC$ ATTRIBUTES ALIAS : "ZOPEN_" :: ZOPEN_
      INTEGER		  IFLTAB,ISTAT   
      CHARACTER*(*) CNAME      
      CALL ZOPEN (IFLTAB, CNAME, ISTAT)
      RETURN
      END


      SUBROUTINE ZOPNCA_ (CDSSFI, ICUNIT, LGENCA, LOPNCA,
     * LCATCA, ICDUNT, LGENCD, LOPNCD, LCATCD, NRECS)
!DEC$ATTRIBUTES DLLEXPORT :: ZOPNCA_
!DEC$ ATTRIBUTES ALIAS : "ZOPNCA_" :: ZOPNCA_
      CHARACTER*(*)	CDSSFI 
	INTEGER   ICUNIT, ICDUNT,NRECS    
	LOGICAL   LGENCA, LOPNCA, LCATCA, LGENCD, LOPNCD, LCATCD
C
C     Initialize return logicals to zero, because of MS Fortran
C     interface problem (only 1 byte is set)
      LOPNCA = 0
      LCATCA = 0
      LOPNCD = 0
      LCATCD = 0
      CALL ZOPNCA (CDSSFI, ICUNIT, LGENCA, LOPNCA,
     *             LCATCA, ICDUNT, LGENCD, LOPNCD, LCATCD, NRECS)
      RETURN
      END


      SUBROUTINE ZRPD_ (IFLTAB, CPATH, NORD, NCURVE, IHORIZ,
     * C1UNIT, C1TYPE, C2UNIT, C2TYPE, VALUES, KVALS, NVALS,
     * CLABEL, KLABEL, LABEL, HEADU, HKEADU, NHEADU, ISTAT)     
!DEC$ATTRIBUTES DLLEXPORT :: ZRPD_
!DEC$ ATTRIBUTES ALIAS : "ZRPD_" :: ZRPD_
      INTEGER       IFLTAB, NORD, NCURVE, IHORIZ, KVALS, NVALS
	INTEGER       KLABEL, HEADU ,HKEADU, NHEADU, ISTAT
	CHARACTER*(*) CPATH,  CLABEL
	CHARACTER*(*) C1UNIT, C1TYPE, C2UNIT, C2TYPE
      REAL          VALUES(KVALS)            
	LOGICAL       LABEL
      LABEL = 0
      CALL ZRPD (IFLTAB, CPATH, NORD, NCURVE, IHORIZ,
     * C1UNIT, C1TYPE, C2UNIT,C2TYPE, VALUES, KVALS, NVALS, CLABEL,
     * KLABEL, LABEL, HEADU, HKEADU, NHEADU, ISTAT)
      RETURN
      END


      SUBROUTINE ZRRTS_ (IFLTAB, CPATH, CDATE, CTIME,
     * NVALS, VALUES, CUNITS, CTYPE, IOFSET, ISTAT)     
!DEC$ATTRIBUTES	DLLEXPORT :: ZRRTS_
!DEC$ ATTRIBUTES	ALIAS : "ZRRTS_" :: ZRRTS_
      INTEGER		IFLTAB, NVALS, IOFSET, ISTAT
      CHARACTER*(*) CPATH, CDATE, CTIME, CUNITS, CTYPE
      REAL		VALUES(NVALS)
      CALL ZRRTS (IFLTAB, CPATH, CDATE,CTIME, NVALS, VALUES, CUNITS,
     * CTYPE, IOFSET, ISTAT)
      RETURN
      END


	SUBROUTINE ZSET_ (CFLG, CSTR, NUMB)
!DEC$ATTRIBUTES	DLLEXPORT :: ZSET_
!DEC$ ATTRIBUTES	ALIAS : "ZSET_" :: ZSET_
      CHARACTER*(*)CFLG, CSTR
	INTEGER		NUMB 
	CALL ZSET (CFLG, CSTR, NUMB)
	RETURN
	END		
      
      
	SUBROUTINE ZCHKPN_ (CPATH, NPATH, ISTAT)
!DEC$ATTRIBUTES	DLLEXPORT :: ZCHKPN_
!DEC$ ATTRIBUTES	ALIAS : "ZCHKPN_" :: ZCHKPN_
      CHARACTER*(*)CPATH
	INTEGER		NPATH,  ISTAT
	CALL ZCHKPN (CPATH, NPATH, ISTAT)
	RETURN
	END		


      SUBROUTINE ZSPD_ (IFLTAB, CPATH, NORD, NCURVE, IHORIZ,
     * C1UNIT, C1TYPE, C2UNIT, C2TYPE, VALUES,
     * CLABEL, LABEL, HEADU, NHEADU, IPLAN, ISTAT)     
!DEC$ATTRIBUTES	DLLEXPORT :: ZSPD_
!DEC$ ATTRIBUTES	ALIAS : "ZSPD_" :: ZSPD_

      INTEGER		IFLTAB, NORD, NCURVE, IHORIZ
      CHARACTER*(*) CPATH, C1UNIT, C1TYPE, C2UNIT, C2TYPE, CLABEL
      REAL		VALUES      
      LOGICAL		LABEL
      INTEGER		HEADU, NHEADU, IPLAN, ISTAT
      CALL ZSPD (IFLTAB, CPATH, NORD, NCURVE, IHORIZ, C1UNIT, C1TYPE, 
     * C2UNIT,C2TYPE, VALUES, CLABEL, LABEL, HEADU, NHEADU, IPLAN,ISTAT)
      RETURN
      END
C
C		Store regular time series
	SUBROUTINE ZSRTS_ (IFLTAB, CPATH, CDATE, CTIME,
     *            NVALS, VALUES, CUNITS, CTYPE, IPLAN, ISTAT)
!DEC$ATTRIBUTES	DLLEXPORT :: ZSRTS_
!DEC$ ATTRIBUTES	ALIAS : "ZSRTS_" :: ZSRTS_
      INTEGER		IFLTAB, NVALS, IPLAN, ISTAT
      REAL		VALUES
      CHARACTER*(*) CPATH, CDATE, CTIME, CUNITS, CTYPE      
      CALL ZSRTS (IFLTAB, CPATH, CDATE,CTIME, NVALS, VALUES, CUNITS,
     * CTYPE, IPLAN, ISTAT)
      RETURN
      END
C
C		Delete a record from a DSS file	
	SUBROUTINE ZDELET_(IFLTAB,CPATH,NPATH,LFOUND)
!DEC$ATTRIBUTES	DLLEXPORT :: ZDELET_
!DEC$ ATTRIBUTES	ALIAS : "ZDELET_" :: ZDELET_
      INTEGER		IFLTAB, NPATH      
      CHARACTER	CPATH*(*)
	INTEGER		LFOUND
	LOGICAL		LOGFOUND
      CALL ZDELET(IFLTAB,CPATH,NPATH,LOGFOUND)  
	LFOUND = LOGFOUND
      RETURN
      END
C
C		Squeeze a DSS File
	SUBROUTINE SQUEEZEDSS_ (CNAME, ISTAT)
!DEC$ATTRIBUTES	DLLEXPORT :: SQUEEZEDSS_
!DEC$ ATTRIBUTES	ALIAS : "SQUEEZEDSS_" :: SQUEEZEDSS_
	CHARACTER	CNAME*(*) 
      INTEGER		ISTAT
	CALL ZSQUEEZE (CNAME,ISTAT)
	RETURN
      END
C
C		Copy a Record in a DSS File
	SUBROUTINE ZCOREC_(IFTOLD,IFTNEW,CPOLD,CPNEW,BUFF1,KBUFF1,
     +            BUFF2,KBUFF2,ISTAT)
!DEC$ATTRIBUTES	DLLEXPORT :: ZCOREC_
!DEC$ ATTRIBUTES	ALIAS : "ZCOREC_" :: ZCOREC_
      INTEGER		IFTOLD, IFTNEW, ISTAT
	CHARACTER*(*) CPOLD,CPNEW
	INTEGER		KBUFF1,KBUFF2
	REAL		BUFF1(KBUFF1),BUFF2(KBUFF2)      
	CALL ZCOREC(IFTOLD,IFTNEW,CPOLD,CPNEW,BUFF1,KBUFF1,
     +                   BUFF2,KBUFF2,ISTAT)	
      RETURN
      END

C
C		Add a filename extension and see if it exists	
	SUBROUTINE ZFNAME_ (CIN, CNAME, NNAME, LEXIST)
!DEC$ATTRIBUTES	DLLEXPORT :: ZFNAME_
!DEC$ ATTRIBUTES	ALIAS : "ZFNAME_" :: ZFNAME_
      CHARACTER	CIN*(*), CNAME*(*)
	INTEGER		NNAME
      LOGICAL		LEXIST
	CALL ZFNAME (CIN, CNAME, NNAME, LEXIST)
	RETURN
	END
C
C		Inquire about a DSS File or record
      SUBROUTINE ZINQIR_ (IFLTAB, CFLG, CALPHA, INUMB)
!DEC$ATTRIBUTES	DLLEXPORT :: ZINQIR_
!DEC$ ATTRIBUTES	ALIAS : "ZINQIR_" :: ZINQIR_
      INTEGER		IFLTAB(*)
      CHARACTER	CFLG*(*), CALPHA*(*)
      INTEGER		INUMB
	CALL ZINQIR (IFLTAB, CFLG, CALPHA, INUMB)
	RETURN
	END

C
C		Store Irregular Time Series
      SUBROUTINE ZSITS_ (IFLTAB, CPATH, ITIMES, VALUES, NVALS, IBDATE,
     *                   CUNITS, CTYPE, INFLAG, ISTAT)
!DEC$ATTRIBUTES	DLLEXPORT :: ZSITS_
!DEC$ ATTRIBUTES	ALIAS : "ZSITS_" :: ZSITS_
      INTEGER		IFLTAB(*)
	INTEGER		NVALS
      REAL		VALUES(NVALS)
      CHARACTER	CPATH*(*), CUNITS*(*), CTYPE*(*)
	INTEGER		ITIMES(NVALS),IBDATE,INFLAG,ISTAT

      CALL ZSITS (IFLTAB, CPATH, ITIMES, VALUES, NVALS, IBDATE,
     *             CUNITS, CTYPE, INFLAG, ISTAT)	
	RETURN
	END
C
C		Retrieve Irregular Time Series
	SUBROUTINE ZRITS_ (IFLTAB, CPATH, JULS, ISTIME, JULE, IETIME,
     * ITIMES, VALUES, KVALS, NVALS, IBDATE, CUNITS, CTYPE, ISTAT)
!DEC$ATTRIBUTES	DLLEXPORT :: ZRITS_
!DEC$ ATTRIBUTES	ALIAS : "ZRITS_" :: ZRITS_
	INTEGER		IFLTAB(*)
	CHARACTER	CPATH*(*), CUNITS*(*), CTYPE*(*)	
	INTEGER		JULS,ISTIME,JULE,IETIME,KVALS,NVALS,IBDATE,ISTAT
      INTEGER		ITIMES(KVALS)
      REAL		VALUES(KVALS) 
	CALL ZRITS (IFLTAB, CPATH, JULS, ISTIME, JULE, IETIME,
     * ITIMES, VALUES, KVALS, NVALS, IBDATE, CUNITS, CTYPE, ISTAT)
	RETURN
	END


	SUBROUTINE ZUPATH_ (CPATH, IBPART, IEPART, ILPART, ISTAT)
!DEC$ATTRIBUTES	DLLEXPORT :: ZUPATH_
!DEC$ ATTRIBUTES	ALIAS : "ZUPATH_" :: ZUPATH_
	CHARACTER	CPATH*(*)
      INTEGER		IBPART(6), IEPART(6), ILPART(6), ISTAT
	CALL ZUPATH (CPATH, IBPART, IEPART, ILPART, ISTAT)
	RETURN
	END
C
C		Sepearte Path Parts
	SUBROUTINE ZGPNP_ (CLINE, CA, CB, CC, CD, CE, CF, NPARTS)
!DEC$ATTRIBUTES	DLLEXPORT :: ZGPNP_
!DEC$ ATTRIBUTES	ALIAS : "ZGPNP_" :: ZGPNP_
      CHARACTER	CA*(*), CB*(*), CC*(*), CD*(*), CE*(*), CF*(*)
      CHARACTER	CLINE*(*)
      INTEGER		NPARTS(6)
	CALL ZGPNP (CLINE, CA, CB, CC, CD, CE, CF, NPARTS)
	RETURN
	END
